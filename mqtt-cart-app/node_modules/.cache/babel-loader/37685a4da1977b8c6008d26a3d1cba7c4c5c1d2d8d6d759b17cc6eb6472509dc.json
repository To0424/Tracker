{"ast":null,"code":"var _jsxFileName = \"/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/components/CartMovement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, PointElement, LinearScale, Tooltip, Legend } from 'chart.js';\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(PointElement, LinearScale, Tooltip, Legend);\nconst CartMovement = ({\n  data\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [latestData, setLatestData] = useState({\n    datasets: [{\n      data: []\n    }]\n  });\n  const [isUserInteracting, setIsUserInteracting] = useState(false);\n  const bgImageRef = useRef(null);\n  const cartImageRef = useRef(null);\n  const lastProcessedIndexRef = useRef(-1);\n  const intervalIdRef = useRef(null);\n  const startAutoProgression = () => {\n    if (intervalIdRef.current) {\n      clearInterval(intervalIdRef.current);\n    }\n    intervalIdRef.current = setInterval(() => {\n      setCurrentIndex(prevIndex => {\n        const newIndex = prevIndex + 1;\n        if (newIndex < data.length) {\n          lastProcessedIndexRef.current = newIndex;\n          return newIndex;\n        } else {\n          clearInterval(intervalIdRef.current);\n          return prevIndex;\n        }\n      });\n    }, 1000); // Adjust this value to control the speed of progression\n  };\n  useEffect(() => {\n    if (data.length > 0 && !isUserInteracting) {\n      startAutoProgression();\n    }\n    return () => {\n      if (intervalIdRef.current) {\n        clearInterval(intervalIdRef.current);\n      }\n    };\n  }, [data, isUserInteracting, currentIndex]);\n  useEffect(() => {\n    if (data.length > 0 && currentIndex < data.length) {\n      setLatestData({\n        datasets: [{\n          label: 'Cart Position',\n          data: [{\n            x: data[currentIndex].x_axis,\n            y: data[currentIndex].y_axis\n          }],\n          backgroundColor: 'blue'\n        }]\n      });\n    }\n  }, [data, currentIndex]);\n  useEffect(() => {\n    // Preload images\n    const bgImg = new Image();\n    bgImg.src = '/bg-image.png';\n    bgImg.onload = () => {\n      bgImageRef.current = bgImg;\n    };\n    const cartImg = new Image();\n    cartImg.src = '/cart-image.png';\n    cartImg.onload = () => {\n      cartImageRef.current = cartImg;\n    };\n  }, []);\n  const handleSliderChange = (event, newValue) => {\n    setIsUserInteracting(true);\n    setCurrentIndex(newValue);\n    if (intervalIdRef.current) {\n      clearInterval(intervalIdRef.current);\n    }\n  };\n  const handleSliderChangeCommitted = () => {\n    setIsUserInteracting(false);\n    lastProcessedIndexRef.current = currentIndex - 1;\n    startAutoProgression();\n  };\n  const backgroundPlugin = {\n    id: 'background',\n    beforeDraw: chart => {\n      if (chart.chartArea && bgImageRef.current) {\n        const {\n          ctx,\n          chartArea\n        } = chart;\n        ctx.drawImage(bgImageRef.current, chartArea.left, chartArea.top, chartArea.width, chartArea.height);\n      }\n    }\n  };\n  const customPointPlugin = {\n    id: 'customPoint',\n    afterDraw: chart => {\n      const {\n        ctx\n      } = chart;\n      chart.data.datasets.forEach(dataset => {\n        dataset.data.forEach((value, index) => {\n          const meta = chart.getDatasetMeta(0);\n          const point = meta.data[index];\n          if (point && cartImageRef.current) {\n            ctx.drawImage(cartImageRef.current, point.x - 15, point.y - 15, 30, 30);\n          }\n        });\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart Movement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n      data: latestData,\n      options: {\n        scales: {\n          x: {\n            type: 'linear',\n            position: 'bottom',\n            min: 0,\n            max: 200\n          },\n          y: {\n            type: 'linear',\n            position: 'left',\n            min: 0,\n            max: 250\n          }\n        },\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        animation: false\n      },\n      plugins: [backgroundPlugin, customPointPlugin]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        value: currentIndex,\n        min: 0,\n        max: Math.max(0, data.length - 1),\n        onChange: handleSliderChange,\n        onChangeCommitted: handleSliderChangeCommitted,\n        \"aria-labelledby\": \"cart-movement-slider\",\n        disabled: data.length === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(CartMovement, \"BwtZCVH9QOFr8H58mD2L72aBDpg=\");\n_c = CartMovement;\nexport default CartMovement;\nvar _c;\n$RefreshReg$(_c, \"CartMovement\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Scatter","Chart","ChartJS","PointElement","LinearScale","Tooltip","Legend","Slider","jsxDEV","_jsxDEV","register","CartMovement","data","_s","currentIndex","setCurrentIndex","latestData","setLatestData","datasets","isUserInteracting","setIsUserInteracting","bgImageRef","cartImageRef","lastProcessedIndexRef","intervalIdRef","startAutoProgression","current","clearInterval","setInterval","prevIndex","newIndex","length","label","x","x_axis","y","y_axis","backgroundColor","bgImg","Image","src","onload","cartImg","handleSliderChange","event","newValue","handleSliderChangeCommitted","backgroundPlugin","id","beforeDraw","chart","chartArea","ctx","drawImage","left","top","width","height","customPointPlugin","afterDraw","forEach","dataset","value","index","meta","getDatasetMeta","point","children","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","type","position","min","max","elements","radius","animation","plugins","Math","onChange","onChangeCommitted","disabled","_c","$RefreshReg$"],"sources":["/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/components/CartMovement.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, PointElement, LinearScale, Tooltip, Legend } from 'chart.js';\nimport Slider from '@mui/material/Slider';\n\nChartJS.register(PointElement, LinearScale, Tooltip, Legend);\n\nconst CartMovement = ({ data }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [latestData, setLatestData] = useState({ datasets: [{ data: [] }] });\n  const [isUserInteracting, setIsUserInteracting] = useState(false);\n  const bgImageRef = useRef(null);\n  const cartImageRef = useRef(null);\n  const lastProcessedIndexRef = useRef(-1);\n  const intervalIdRef = useRef(null);\n\n  const startAutoProgression = () => {\n    if (intervalIdRef.current) {\n      clearInterval(intervalIdRef.current);\n    }\n    intervalIdRef.current = setInterval(() => {\n      setCurrentIndex(prevIndex => {\n        const newIndex = prevIndex + 1;\n        if (newIndex < data.length) {\n          lastProcessedIndexRef.current = newIndex;\n          return newIndex;\n        } else {\n          clearInterval(intervalIdRef.current);\n          return prevIndex;\n        }\n      });\n    }, 1000); // Adjust this value to control the speed of progression\n  };\n\n  useEffect(() => {\n    if (data.length > 0 && !isUserInteracting) {\n      startAutoProgression();\n    }\n    return () => {\n      if (intervalIdRef.current) {\n        clearInterval(intervalIdRef.current);\n      }\n    };\n  }, [data, isUserInteracting, currentIndex]);\n\n  useEffect(() => {\n    if (data.length > 0 && currentIndex < data.length) {\n      setLatestData({\n        datasets: [{\n          label: 'Cart Position',\n          data: [{ x: data[currentIndex].x_axis, y: data[currentIndex].y_axis }],\n          backgroundColor: 'blue',\n        }]\n      });\n    }\n  }, [data, currentIndex]);\n\n  useEffect(() => {\n    // Preload images\n    const bgImg = new Image();\n    bgImg.src = '/bg-image.png';\n    bgImg.onload = () => {\n      bgImageRef.current = bgImg;\n    };\n\n    const cartImg = new Image();\n    cartImg.src = '/cart-image.png';\n    cartImg.onload = () => {\n      cartImageRef.current = cartImg;\n    };\n  }, []);\n\n  const handleSliderChange = (event, newValue) => {\n    setIsUserInteracting(true);\n    setCurrentIndex(newValue);\n    if (intervalIdRef.current) {\n      clearInterval(intervalIdRef.current);\n    }\n  };\n\n  const handleSliderChangeCommitted = () => {\n    setIsUserInteracting(false);\n    lastProcessedIndexRef.current = currentIndex - 1;\n    startAutoProgression();\n  };\n\n  const backgroundPlugin = {\n    id: 'background',\n    beforeDraw: (chart) => {\n      if (chart.chartArea && bgImageRef.current) {\n        const { ctx, chartArea } = chart;\n        ctx.drawImage(bgImageRef.current, chartArea.left, chartArea.top, chartArea.width, chartArea.height);\n      }\n    }\n  };\n\n  const customPointPlugin = {\n    id: 'customPoint',\n    afterDraw: (chart) => {\n      const { ctx } = chart;\n      chart.data.datasets.forEach((dataset) => {\n        dataset.data.forEach((value, index) => {\n          const meta = chart.getDatasetMeta(0);\n          const point = meta.data[index];\n          if (point && cartImageRef.current) {\n            ctx.drawImage(cartImageRef.current, point.x - 15, point.y - 15, 30, 30);\n          }\n        });\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Cart Movement</h1>\n      <Scatter\n        data={latestData}\n        options={{\n          scales: {\n            x: {\n              type: 'linear',\n              position: 'bottom',\n              min: 0,\n              max: 200,\n            },\n            y: {\n              type: 'linear',\n              position: 'left',\n              min: 0,\n              max: 250,\n            },\n          },\n          elements: {\n            point: {\n              radius: 0\n            }\n          },\n          animation: false\n        }}\n        plugins={[backgroundPlugin, customPointPlugin]}\n      />\n      <div>\n        <Slider\n          value={currentIndex}\n          min={0}\n          max={Math.max(0, data.length - 1)}\n          onChange={handleSliderChange}\n          onChangeCommitted={handleSliderChangeCommitted}\n          aria-labelledby=\"cart-movement-slider\"\n          disabled={data.length === 0}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CartMovement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}