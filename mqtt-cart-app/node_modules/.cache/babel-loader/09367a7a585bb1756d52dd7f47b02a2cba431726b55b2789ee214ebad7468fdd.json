{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useMqtt.js\nimport { useState, useEffect, useRef } from 'react';\nimport mqtt from 'mqtt';\nconst useMqtt = (brokerUrl, topic) => {\n  _s();\n  const [data, setData] = useState([]);\n  const lastProcessedTimestampRef = useRef(null);\n  useEffect(() => {\n    const client = mqtt.connect(brokerUrl);\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe(topic, err => {\n        if (err) {\n          console.error('Subscription error:', err);\n        } else {\n          console.log(`Subscribed to topic: ${topic}`);\n        }\n      });\n    });\n    client.on('message', (topic, message) => {\n      try {\n        const newData = JSON.parse(message.toString());\n        console.log('Received data:', newData);\n\n        // Only add new data point if it has a newer timestamp\n        if (!lastProcessedTimestampRef.current || newData.timestamp > lastProcessedTimestampRef.current) {\n          setData(prevData => [...prevData, newData]);\n          lastProcessedTimestampRef.current = newData.timestamp;\n        }\n      } catch (error) {\n        console.error('Error parsing message:', error);\n      }\n    });\n    client.on('error', error => {\n      console.error('MQTT Connection Error:', error);\n    });\n    return () => {\n      if (client) {\n        client.end();\n      }\n    };\n  }, [brokerUrl, topic]);\n  return data;\n};\n_s(useMqtt, \"VJ5PDfK37TCDRS5ZdgpwTjA84LI=\");\nexport default useMqtt;","map":{"version":3,"names":["useState","useEffect","useRef","mqtt","useMqtt","brokerUrl","topic","_s","data","setData","lastProcessedTimestampRef","client","connect","on","console","log","subscribe","err","error","message","newData","JSON","parse","toString","current","timestamp","prevData","end"],"sources":["/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/hooks/useMqtt.js"],"sourcesContent":["// src/hooks/useMqtt.js\nimport { useState, useEffect, useRef } from 'react';\nimport mqtt from 'mqtt';\n\nconst useMqtt = (brokerUrl, topic) => {\n  const [data, setData] = useState([]);\n  const lastProcessedTimestampRef = useRef(null);\n\n  useEffect(() => {\n    const client = mqtt.connect(brokerUrl);\n\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe(topic, (err) => {\n        if (err) {\n          console.error('Subscription error:', err);\n        } else {\n          console.log(`Subscribed to topic: ${topic}`);\n        }\n      });\n    });\n\n    client.on('message', (topic, message) => {\n      try {\n        const newData = JSON.parse(message.toString());\n        console.log('Received data:', newData);\n\n        // Only add new data point if it has a newer timestamp\n        if (!lastProcessedTimestampRef.current || newData.timestamp > lastProcessedTimestampRef.current) {\n          setData((prevData) => [...prevData, newData]);\n          lastProcessedTimestampRef.current = newData.timestamp;\n        }\n      } catch (error) {\n        console.error('Error parsing message:', error);\n      }\n    });\n\n    client.on('error', (error) => {\n      console.error('MQTT Connection Error:', error);\n    });\n\n    return () => {\n      if (client) {\n        client.end();\n      }\n    };\n  }, [brokerUrl, topic]);\n\n  return data;\n};\n\nexport default useMqtt;"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,IAAI,MAAM,MAAM;AAEvB,MAAMC,OAAO,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMU,yBAAyB,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAGR,IAAI,CAACS,OAAO,CAACP,SAAS,CAAC;IAEtCM,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCJ,MAAM,CAACK,SAAS,CAACV,KAAK,EAAGW,GAAG,IAAK;QAC/B,IAAIA,GAAG,EAAE;UACPH,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;QAC3C,CAAC,MAAM;UACLH,OAAO,CAACC,GAAG,CAAC,wBAAwBT,KAAK,EAAE,CAAC;QAC9C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFK,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,CAACP,KAAK,EAAEa,OAAO,KAAK;MACvC,IAAI;QACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,QAAQ,CAAC,CAAC,CAAC;QAC9CT,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,OAAO,CAAC;;QAEtC;QACA,IAAI,CAACV,yBAAyB,CAACc,OAAO,IAAIJ,OAAO,CAACK,SAAS,GAAGf,yBAAyB,CAACc,OAAO,EAAE;UAC/Ff,OAAO,CAAEiB,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEN,OAAO,CAAC,CAAC;UAC7CV,yBAAyB,CAACc,OAAO,GAAGJ,OAAO,CAACK,SAAS;QACvD;MACF,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC,CAAC;IAEFP,MAAM,CAACE,EAAE,CAAC,OAAO,EAAGK,KAAK,IAAK;MAC5BJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAIP,MAAM,EAAE;QACVA,MAAM,CAACgB,GAAG,CAAC,CAAC;MACd;IACF,CAAC;EACH,CAAC,EAAE,CAACtB,SAAS,EAAEC,KAAK,CAAC,CAAC;EAEtB,OAAOE,IAAI;AACb,CAAC;AAACD,EAAA,CA7CIH,OAAO;AA+Cb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}