{"ast":null,"code":"var _jsxFileName = \"/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MQTT_BROKER = 'ws://broker.hivemq.com:8000/mqtt';\nconst MQTT_TOPIC = 'cart/position';\nfunction App() {\n  _s();\n  const [dataPoints, setDataPoints] = useState([]);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Cart Position',\n      data: [],\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(75,192,192,1)'\n    }]\n  });\n  useEffect(() => {\n    const client = mqtt.connect(MQTT_BROKER);\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe(MQTT_TOPIC, err => {\n        if (err) {\n          console.error('Subscription error:', err);\n        }\n      });\n    });\n    client.on('message', (topic, message) => {\n      if (topic === MQTT_TOPIC) {\n        const data = JSON.parse(message.toString());\n        setDataPoints(prev => [...prev, data]);\n        setChartData(prevChartData => {\n          const newLabels = [...prevChartData.labels, `Point ${prevChartData.labels.length + 1}`];\n          const newData = [...prevChartData.datasets[0].data, {\n            x: data.x_axis,\n            y: data.y_axis\n          }];\n          return {\n            ...prevChartData,\n            labels: newLabels,\n            datasets: [{\n              ...prevChartData.datasets[0],\n              data: newData\n            }]\n          };\n        });\n      }\n    });\n    return () => {\n      if (client) {\n        client.end();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart Positions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1XegHxNE6VU4Tdyzkp0AzPtLs/A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","mqtt","Line","jsxDEV","_jsxDEV","MQTT_BROKER","MQTT_TOPIC","App","_s","dataPoints","setDataPoints","chartData","setChartData","labels","datasets","label","data","fill","backgroundColor","borderColor","client","connect","on","console","log","subscribe","err","error","topic","message","JSON","parse","toString","prev","prevChartData","newLabels","length","newData","x","x_axis","y","y_axis","end","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nconst MQTT_BROKER = 'ws://broker.hivemq.com:8000/mqtt';\nconst MQTT_TOPIC = 'cart/position';\n\nfunction App() {\n  const [dataPoints, setDataPoints] = useState([]);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: 'Cart Position',\n        data: [],\n        fill: false,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(75,192,192,1)',\n      },\n    ],\n  });\n\n  useEffect(() => {\n    const client = mqtt.connect(MQTT_BROKER);\n\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe(MQTT_TOPIC, (err) => {\n        if (err) {\n          console.error('Subscription error:', err);\n        }\n      });\n    });\n\n    client.on('message', (topic, message) => {\n      if (topic === MQTT_TOPIC) {\n        const data = JSON.parse(message.toString());\n        setDataPoints((prev) => [...prev, data]);\n\n        setChartData((prevChartData) => {\n          const newLabels = [...prevChartData.labels, `Point ${prevChartData.labels.length + 1}`];\n          const newData = [...prevChartData.datasets[0].data, { x: data.x_axis, y: data.y_axis }];\n          return {\n            ...prevChartData,\n            labels: newLabels,\n            datasets: [\n              {\n                ...prevChartData.datasets[0],\n                data: newData,\n              },\n            ],\n          };\n        });\n      }\n    });\n\n    return () => {\n      if (client) {\n        client.end();\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Cart Positions</h1>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}