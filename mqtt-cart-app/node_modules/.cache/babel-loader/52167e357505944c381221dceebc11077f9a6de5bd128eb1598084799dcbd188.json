{"ast":null,"code":"var _jsxFileName = \"/Users/daviswu/Desktop/cart-tracker/mqtt-cart-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport mqtt from 'mqtt';\nimport CartMovement from './components/CartMovement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MQTT_BROKER = 'ws://broker.hivemq.com:8000/mqtt';\nconst MQTT_TOPIC = 'cart/position';\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const lastProcessedTimestampRef = useRef(null);\n  useEffect(() => {\n    const client = mqtt.connect(MQTT_BROKER);\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe(MQTT_TOPIC, err => {\n        if (err) {\n          console.error('Subscription error:', err);\n        } else {\n          console.log(`Subscribed to topic: ${MQTT_TOPIC}`);\n        }\n      });\n    });\n    client.on('message', (topic, message) => {\n      if (topic === MQTT_TOPIC) {\n        try {\n          const newData = JSON.parse(message.toString());\n          console.log('Received data:', newData);\n\n          // Only add the new data point if it has a newer timestamp\n          if (!lastProcessedTimestampRef.current || newData.timestamp > lastProcessedTimestampRef.current) {\n            setData(prevData => [...prevData, newData]);\n            lastProcessedTimestampRef.current = newData.timestamp;\n          }\n        } catch (error) {\n          console.error('Error parsing message:', error);\n        }\n      }\n    });\n    client.on('error', error => {\n      console.error('MQTT Connection Error:', error);\n    });\n    return () => {\n      if (client) {\n        client.end();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartMovement, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VJ5PDfK37TCDRS5ZdgpwTjA84LI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","mqtt","CartMovement","jsxDEV","_jsxDEV","MQTT_BROKER","MQTT_TOPIC","App","_s","data","setData","lastProcessedTimestampRef","client","connect","on","console","log","subscribe","err","error","topic","message","newData","JSON","parse","toString","current","timestamp","prevData","end","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daviswu/Desktop/cart-tracker/mqtt-cart-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport mqtt from 'mqtt';\nimport CartMovement from './components/CartMovement';\n\nconst MQTT_BROKER = 'ws://broker.hivemq.com:8000/mqtt';\nconst MQTT_TOPIC = 'cart/position';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const lastProcessedTimestampRef = useRef(null);\n\n  useEffect(() => {\n    const client = mqtt.connect(MQTT_BROKER);\n\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe(MQTT_TOPIC, (err) => {\n        if (err) {\n          console.error('Subscription error:', err);\n        } else {\n          console.log(`Subscribed to topic: ${MQTT_TOPIC}`);\n        }\n      });\n    });\n\n    client.on('message', (topic, message) => {\n      if (topic === MQTT_TOPIC) {\n        try {\n          const newData = JSON.parse(message.toString());\n          console.log('Received data:', newData);\n          \n          // Only add the new data point if it has a newer timestamp\n          if (!lastProcessedTimestampRef.current || newData.timestamp > lastProcessedTimestampRef.current) {\n            setData((prevData) => [...prevData, newData]);\n            lastProcessedTimestampRef.current = newData.timestamp;\n          }\n        } catch (error) {\n          console.error('Error parsing message:', error);\n        }\n      }\n    });\n\n    client.on('error', (error) => {\n      console.error('MQTT Connection Error:', error);\n    });\n\n    return () => {\n      if (client) {\n        client.end();\n      }\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Data Points</h1>\n      <CartMovement data={data} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAG,kCAAkC;AACtD,MAAMC,UAAU,GAAG,eAAe;AAElC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMa,yBAAyB,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMa,MAAM,GAAGX,IAAI,CAACY,OAAO,CAACR,WAAW,CAAC;IAExCO,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCJ,MAAM,CAACK,SAAS,CAACX,UAAU,EAAGY,GAAG,IAAK;QACpC,IAAIA,GAAG,EAAE;UACPH,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;QAC3C,CAAC,MAAM;UACLH,OAAO,CAACC,GAAG,CAAC,wBAAwBV,UAAU,EAAE,CAAC;QACnD;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFM,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,CAACM,KAAK,EAAEC,OAAO,KAAK;MACvC,IAAID,KAAK,KAAKd,UAAU,EAAE;QACxB,IAAI;UACF,MAAMgB,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,QAAQ,CAAC,CAAC,CAAC;UAC9CV,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEM,OAAO,CAAC;;UAEtC;UACA,IAAI,CAACX,yBAAyB,CAACe,OAAO,IAAIJ,OAAO,CAACK,SAAS,GAAGhB,yBAAyB,CAACe,OAAO,EAAE;YAC/FhB,OAAO,CAAEkB,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEN,OAAO,CAAC,CAAC;YAC7CX,yBAAyB,CAACe,OAAO,GAAGJ,OAAO,CAACK,SAAS;UACvD;QACF,CAAC,CAAC,OAAOR,KAAK,EAAE;UACdJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD;MACF;IACF,CAAC,CAAC;IAEFP,MAAM,CAACE,EAAE,CAAC,OAAO,EAAGK,KAAK,IAAK;MAC5BJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAIP,MAAM,EAAE;QACVA,MAAM,CAACiB,GAAG,CAAC,CAAC;MACd;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB9B,OAAA,CAACF,YAAY;MAACO,IAAI,EAAEA;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAAC1B,EAAA,CApDID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAsDT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}