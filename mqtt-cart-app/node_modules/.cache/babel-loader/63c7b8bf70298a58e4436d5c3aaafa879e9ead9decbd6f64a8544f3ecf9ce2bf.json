{"ast":null,"code":"var _jsxFileName = \"/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/components/CartMovement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, PointElement, LinearScale, Tooltip, Legend } from 'chart.js';\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(PointElement, LinearScale, Tooltip, Legend);\nconst CartMovement = ({\n  data\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [latestData, setLatestData] = useState({\n    datasets: [{\n      data: []\n    }]\n  });\n  const bgImageRef = useRef(null);\n  const cartImageRef = useRef(null);\n  const autoPullTimeout = useRef(null);\n  useEffect(() => {\n    if (data.length > 0) {\n      const lastIndex = data.length - 1;\n      if (currentIndex === lastIndex) {\n        setLatestData({\n          datasets: [{\n            label: 'Cart Position',\n            data: [{\n              x: data[lastIndex].x_axis,\n              y: data[lastIndex].y_axis\n            }],\n            backgroundColor: 'blue'\n          }]\n        });\n      }\n    }\n  }, [data, currentIndex]);\n  const handleSliderChange = (event, newValue) => {\n    setCurrentIndex(newValue);\n    const selectedPoint = data[newValue];\n    setLatestData({\n      datasets: [{\n        label: 'Cart Position',\n        data: [{\n          x: selectedPoint.x_axis,\n          y: selectedPoint.y_axis\n        }],\n        backgroundColor: 'blue'\n      }]\n    });\n\n    // Clear any existing timeout\n    if (autoPullTimeout.current) {\n      clearTimeout(autoPullTimeout.current);\n    }\n\n    // Start auto-pull from the selected point to the latest point\n    autoPullTimeout.current = setTimeout(() => {\n      autoPullToLatest(newValue);\n    }, 1000); // Adjust the delay as needed\n  };\n  const autoPullToLatest = startIndex => {\n    const lastIndex = data.length - 1;\n    const iterateToLatest = index => {\n      if (index <= lastIndex) {\n        setCurrentIndex(index);\n        setLatestData({\n          datasets: [{\n            label: 'Cart Position',\n            data: [{\n              x: data[index].x_axis,\n              y: data[index].y_axis\n            }],\n            backgroundColor: 'blue'\n          }]\n        });\n        autoPullTimeout.current = setTimeout(() => {\n          iterateToLatest(index + 1);\n        }, 500); // Adjust the delay as needed for smoother animation\n      }\n    };\n    iterateToLatest(startIndex);\n  };\n  useEffect(() => {\n    // Preload images\n    const bgImg = new Image();\n    bgImg.src = '/bg-image.png';\n    bgImg.onload = () => {\n      bgImageRef.current = bgImg;\n    };\n    const cartImg = new Image();\n    cartImg.src = '/cart-image.png';\n    cartImg.onload = () => {\n      cartImageRef.current = cartImg;\n    };\n  }, []);\n  const backgroundPlugin = {\n    id: 'background',\n    beforeDraw: chart => {\n      if (chart.chartArea && bgImageRef.current) {\n        const {\n          ctx,\n          chartArea\n        } = chart;\n        ctx.drawImage(bgImageRef.current, chartArea.left, chartArea.top, chartArea.width, chartArea.height);\n      }\n    }\n  };\n  const customPointPlugin = {\n    id: 'customPoint',\n    afterDraw: chart => {\n      const {\n        ctx\n      } = chart;\n      chart.data.datasets.forEach(dataset => {\n        dataset.data.forEach((value, index) => {\n          const meta = chart.getDatasetMeta(0);\n          const point = meta.data[index];\n          if (point && cartImageRef.current) {\n            ctx.drawImage(cartImageRef.current, point.x - 15, point.y - 15, 30, 30);\n          }\n        });\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart Movement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n      data: latestData,\n      options: {\n        scales: {\n          x: {\n            type: 'linear',\n            position: 'bottom',\n            min: 0,\n            max: 200\n          },\n          y: {\n            type: 'linear',\n            position: 'left',\n            min: 0,\n            max: 250\n          }\n        },\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        animation: false\n      },\n      plugins: [backgroundPlugin, customPointPlugin]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        value: currentIndex,\n        min: 0,\n        max: data.length - 1,\n        onChange: handleSliderChange,\n        \"aria-labelledby\": \"cart-movement-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(CartMovement, \"9JKABBQ6qPRy+OttB4Gmp1InF6Q=\");\n_c = CartMovement;\nexport default CartMovement;\nvar _c;\n$RefreshReg$(_c, \"CartMovement\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Scatter","Chart","ChartJS","PointElement","LinearScale","Tooltip","Legend","Slider","jsxDEV","_jsxDEV","register","CartMovement","data","_s","currentIndex","setCurrentIndex","latestData","setLatestData","datasets","bgImageRef","cartImageRef","autoPullTimeout","length","lastIndex","label","x","x_axis","y","y_axis","backgroundColor","handleSliderChange","event","newValue","selectedPoint","current","clearTimeout","setTimeout","autoPullToLatest","startIndex","iterateToLatest","index","bgImg","Image","src","onload","cartImg","backgroundPlugin","id","beforeDraw","chart","chartArea","ctx","drawImage","left","top","width","height","customPointPlugin","afterDraw","forEach","dataset","value","meta","getDatasetMeta","point","children","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","type","position","min","max","elements","radius","animation","plugins","onChange","_c","$RefreshReg$"],"sources":["/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/components/CartMovement.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, PointElement, LinearScale, Tooltip, Legend } from 'chart.js';\nimport Slider from '@mui/material/Slider';\n\nChartJS.register(PointElement, LinearScale, Tooltip, Legend);\n\nconst CartMovement = ({ data }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [latestData, setLatestData] = useState({ datasets: [{ data: [] }] });\n  const bgImageRef = useRef(null);\n  const cartImageRef = useRef(null);\n  const autoPullTimeout = useRef(null);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      const lastIndex = data.length - 1;\n      if (currentIndex === lastIndex) {\n        setLatestData({\n          datasets: [{\n            label: 'Cart Position',\n            data: [{ x: data[lastIndex].x_axis, y: data[lastIndex].y_axis }],\n            backgroundColor: 'blue',\n          }]\n        });\n      }\n    }\n  }, [data, currentIndex]);\n\n  const handleSliderChange = (event, newValue) => {\n    setCurrentIndex(newValue);\n    const selectedPoint = data[newValue];\n    setLatestData({\n      datasets: [{\n        label: 'Cart Position',\n        data: [{ x: selectedPoint.x_axis, y: selectedPoint.y_axis }],\n        backgroundColor: 'blue',\n      }]\n    });\n\n    // Clear any existing timeout\n    if (autoPullTimeout.current) {\n      clearTimeout(autoPullTimeout.current);\n    }\n\n    // Start auto-pull from the selected point to the latest point\n    autoPullTimeout.current = setTimeout(() => {\n      autoPullToLatest(newValue);\n    }, 1000); // Adjust the delay as needed\n  };\n\n  const autoPullToLatest = (startIndex) => {\n    const lastIndex = data.length - 1;\n\n    const iterateToLatest = (index) => {\n      if (index <= lastIndex) {\n        setCurrentIndex(index);\n        setLatestData({\n          datasets: [{\n            label: 'Cart Position',\n            data: [{ x: data[index].x_axis, y: data[index].y_axis }],\n            backgroundColor: 'blue',\n          }]\n        });\n        autoPullTimeout.current = setTimeout(() => {\n          iterateToLatest(index + 1);\n        }, 500); // Adjust the delay as needed for smoother animation\n      }\n    };\n\n    iterateToLatest(startIndex);\n  };\n\n  useEffect(() => {\n    // Preload images\n    const bgImg = new Image();\n    bgImg.src = '/bg-image.png';\n    bgImg.onload = () => {\n      bgImageRef.current = bgImg;\n    };\n\n    const cartImg = new Image();\n    cartImg.src = '/cart-image.png';\n    cartImg.onload = () => {\n      cartImageRef.current = cartImg;\n    };\n  }, []);\n\n  const backgroundPlugin = {\n    id: 'background',\n    beforeDraw: (chart) => {\n      if (chart.chartArea && bgImageRef.current) {\n        const { ctx, chartArea } = chart;\n        ctx.drawImage(bgImageRef.current, chartArea.left, chartArea.top, chartArea.width, chartArea.height);\n      }\n    }\n  };\n\n  const customPointPlugin = {\n    id: 'customPoint',\n    afterDraw: (chart) => {\n      const { ctx } = chart;\n      chart.data.datasets.forEach((dataset) => {\n        dataset.data.forEach((value, index) => {\n          const meta = chart.getDatasetMeta(0);\n          const point = meta.data[index];\n          if (point && cartImageRef.current) {\n            ctx.drawImage(cartImageRef.current, point.x - 15, point.y - 15, 30, 30);\n          }\n        });\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Cart Movement</h1>\n      <Scatter\n        data={latestData}\n        options={{\n          scales: {\n            x: {\n              type: 'linear',\n              position: 'bottom',\n              min: 0,\n              max: 200,\n            },\n            y: {\n              type: 'linear',\n              position: 'left',\n              min: 0,\n              max: 250,\n            },\n          },\n          elements: {\n            point: {\n              radius: 0\n            }\n          },\n          animation: false\n        }}\n        plugins={[backgroundPlugin, customPointPlugin]}\n      />\n      <div>\n        <Slider\n          value={currentIndex}\n          min={0}\n          max={data.length - 1}\n          onChange={handleSliderChange}\n          aria-labelledby=\"cart-movement-slider\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CartMovement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}