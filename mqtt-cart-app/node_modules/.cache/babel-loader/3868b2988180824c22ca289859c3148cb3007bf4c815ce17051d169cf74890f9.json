{"ast":null,"code":"var _jsxFileName = \"/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/components/CartMovement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, PointElement, LinearScale, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(PointElement, LinearScale, Tooltip, Legend);\nconst CartMovement = ({\n  data\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [latestData, setLatestData] = useState({\n    datasets: [{\n      data: []\n    }]\n  });\n  const bgImageRef = useRef(null);\n  const cartImageRef = useRef(null);\n  useEffect(() => {\n    if (data.length > 0) {\n      const lastIndex = data.length - 1;\n      if (currentIndex !== lastIndex) {\n        setCurrentIndex(lastIndex);\n      }\n    }\n  }, [data, currentIndex]);\n  useEffect(() => {\n    if (data.length > 0 && currentIndex < data.length) {\n      setLatestData({\n        datasets: [{\n          label: 'Cart Position',\n          data: [{\n            x: data[currentIndex].x_axis,\n            y: data[currentIndex].y_axis\n          }],\n          backgroundColor: 'blue'\n        }]\n      });\n    }\n  }, [data, currentIndex]);\n  useEffect(() => {\n    const bgImg = new Image();\n    bgImg.src = '/bg-image.png';\n    bgImg.onload = () => {\n      bgImageRef.current = bgImg;\n    };\n    const cartImg = new Image();\n    cartImg.src = '/cart-image.png';\n    cartImg.onload = () => {\n      cartImageRef.current = cartImg;\n    };\n  }, []);\n  const backgroundPlugin = {\n    id: 'background',\n    beforeDraw: chart => {\n      if (chart.chartArea && bgImageRef.current) {\n        const {\n          ctx,\n          chartArea\n        } = chart;\n        ctx.drawImage(bgImageRef.current, chartArea.left, chartArea.top, chartArea.width, chartArea.height);\n      }\n    }\n  };\n  const customPointPlugin = {\n    id: 'customPoint',\n    afterDraw: chart => {\n      const {\n        ctx\n      } = chart;\n      chart.data.datasets.forEach(dataset => {\n        dataset.data.forEach((value, index) => {\n          const meta = chart.getDatasetMeta(0);\n          const point = meta.data[index];\n          if (point && cartImageRef.current) {\n            ctx.drawImage(cartImageRef.current, point.x - 15, point.y - 15, 30, 30);\n          }\n        });\n      });\n    }\n  };\n  const handleSliderChange = useCallback(event => {\n    const index = parseInt(event.target.value, 10);\n    setCurrentIndex(index);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart Movement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n      data: latestData,\n      options: {\n        scales: {\n          x: {\n            type: 'linear',\n            position: 'bottom',\n            min: 0,\n            max: 200\n          },\n          y: {\n            type: 'linear',\n            position: 'left',\n            min: 0,\n            max: 250\n          }\n        },\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        animation: false\n      },\n      plugins: [backgroundPlugin, customPointPlugin]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: data.length - 1,\n      value: currentIndex,\n      onChange: handleSliderChange,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(CartMovement, \"NZkGW5KQohlbxdDBclDywR45F7E=\");\n_c = CartMovement;\nexport default CartMovement;\nvar _c;\n$RefreshReg$(_c, \"CartMovement\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Scatter","Chart","ChartJS","PointElement","LinearScale","Tooltip","Legend","jsxDEV","_jsxDEV","register","CartMovement","data","_s","currentIndex","setCurrentIndex","latestData","setLatestData","datasets","bgImageRef","cartImageRef","length","lastIndex","label","x","x_axis","y","y_axis","backgroundColor","bgImg","Image","src","onload","current","cartImg","backgroundPlugin","id","beforeDraw","chart","chartArea","ctx","drawImage","left","top","width","height","customPointPlugin","afterDraw","forEach","dataset","value","index","meta","getDatasetMeta","point","handleSliderChange","event","parseInt","target","children","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","type","position","min","max","elements","radius","animation","plugins","onChange","style","_c","$RefreshReg$"],"sources":["/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/components/CartMovement.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, PointElement, LinearScale, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(PointElement, LinearScale, Tooltip, Legend);\n\nconst CartMovement = ({ data }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [latestData, setLatestData] = useState({ datasets: [{ data: [] }] });\n  const bgImageRef = useRef(null);\n  const cartImageRef = useRef(null);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      const lastIndex = data.length - 1;\n      if (currentIndex !== lastIndex) {\n        setCurrentIndex(lastIndex);\n      }\n    }\n  }, [data, currentIndex]);\n\n  useEffect(() => {\n    if (data.length > 0 && currentIndex < data.length) {\n      setLatestData({\n        datasets: [{\n          label: 'Cart Position',\n          data: [{ x: data[currentIndex].x_axis, y: data[currentIndex].y_axis }],\n          backgroundColor: 'blue',\n        }]\n      });\n    }\n  }, [data, currentIndex]);\n\n  useEffect(() => {\n    const bgImg = new Image();\n    bgImg.src = '/bg-image.png';\n    bgImg.onload = () => {\n      bgImageRef.current = bgImg;\n    };\n\n    const cartImg = new Image();\n    cartImg.src = '/cart-image.png';\n    cartImg.onload = () => {\n      cartImageRef.current = cartImg;\n    };\n  }, []);\n\n  const backgroundPlugin = {\n    id: 'background',\n    beforeDraw: (chart) => {\n      if (chart.chartArea && bgImageRef.current) {\n        const { ctx, chartArea } = chart;\n        ctx.drawImage(bgImageRef.current, chartArea.left, chartArea.top, chartArea.width, chartArea.height);\n      }\n    }\n  };\n\n  const customPointPlugin = {\n    id: 'customPoint',\n    afterDraw: (chart) => {\n      const { ctx } = chart;\n      chart.data.datasets.forEach((dataset) => {\n        dataset.data.forEach((value, index) => {\n          const meta = chart.getDatasetMeta(0);\n          const point = meta.data[index];\n          if (point && cartImageRef.current) {\n            ctx.drawImage(cartImageRef.current, point.x - 15, point.y - 15, 30, 30);\n          }\n        });\n      });\n    }\n  };\n\n  const handleSliderChange = useCallback((event) => {\n    const index = parseInt(event.target.value, 10);\n    setCurrentIndex(index);\n  }, []);\n\n  return (\n    <div>\n      <h1>Cart Movement</h1>\n      <Scatter\n        data={latestData}\n        options={{\n          scales: {\n            x: {\n              type: 'linear',\n              position: 'bottom',\n              min: 0,\n              max: 200,\n            },\n            y: {\n              type: 'linear',\n              position: 'left',\n              min: 0,\n              max: 250,\n            },\n          },\n          elements: {\n            point: {\n              radius: 0\n            }\n          },\n          animation: false\n        }}\n        plugins={[backgroundPlugin, customPointPlugin]}\n      />\n      <input\n        type=\"range\"\n        min=\"0\"\n        max={data.length - 1}\n        value={currentIndex}\n        onChange={handleSliderChange}\n        style={{ width: '100%' }}\n      />\n    </div>\n  );\n};\n\nexport default CartMovement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}