{"ast":null,"code":"var _jsxFileName = \"/Users/daviswu/Desktop/cart-tracker/mqtt-cart-app/src/components/CartMovement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, PointElement, LinearScale, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(PointElement, LinearScale, Tooltip, Legend);\nconst colors = ['red', 'blue', 'green', 'orange', 'purple', 'cyan', 'magenta', 'yellow', 'brown', 'grey'];\nconst getColor = (() => {\n  const colorMap = {};\n  return tag => {\n    if (!colorMap[tag]) {\n      colorMap[tag] = colors[Object.keys(colorMap).length % colors.length];\n    }\n    return colorMap[tag];\n  };\n})();\nconst CartMovement = ({\n  data\n}) => {\n  _s();\n  const [latestData, setLatestData] = useState({\n    datasets: []\n  });\n  useEffect(() => {\n    if (data.length > 0) {\n      const latestMovements = data.reduce((acc, dataPoint) => {\n        acc[dataPoint.tag] = dataPoint;\n        return acc;\n      }, {});\n      const datasets = Object.keys(latestMovements).map(tag => ({\n        label: `Tag: ${tag}`,\n        data: [{\n          x: latestMovements[tag].x_axis,\n          y: latestMovements[tag].y_axis\n        }],\n        backgroundColor: getColor(tag)\n      }));\n      setLatestData({\n        datasets\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart Movement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n      data: latestData,\n      options: {\n        scales: {\n          x: {\n            type: 'linear',\n            position: 'bottom',\n            min: 0,\n            max: 200,\n            ticks: {\n              display: false\n            },\n            grid: {\n              drawBorder: false,\n              display: false\n            }\n          },\n          y: {\n            type: 'linear',\n            position: 'left',\n            min: 0,\n            max: 250,\n            ticks: {\n              display: true,\n              beginAtZero: true\n            },\n            grid: {\n              drawBorder: true,\n              display: false\n            }\n          }\n        },\n        elements: {\n          point: {\n            radius: 5\n          }\n        },\n        animation: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CartMovement, \"r7pgsSnKhPV0CGXeS0zQOjvAUMU=\");\n_c = CartMovement;\nexport default CartMovement;\nvar _c;\n$RefreshReg$(_c, \"CartMovement\");","map":{"version":3,"names":["React","useEffect","useState","Scatter","Chart","ChartJS","PointElement","LinearScale","Tooltip","Legend","jsxDEV","_jsxDEV","register","colors","getColor","colorMap","tag","Object","keys","length","CartMovement","data","_s","latestData","setLatestData","datasets","latestMovements","reduce","acc","dataPoint","map","label","x","x_axis","y","y_axis","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","type","position","min","max","ticks","display","grid","drawBorder","beginAtZero","elements","point","radius","animation","_c","$RefreshReg$"],"sources":["/Users/daviswu/Desktop/cart-tracker/mqtt-cart-app/src/components/CartMovement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, PointElement, LinearScale, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(PointElement, LinearScale, Tooltip, Legend);\n\nconst colors = ['red', 'blue', 'green', 'orange', 'purple', 'cyan', 'magenta', 'yellow', 'brown', 'grey'];\nconst getColor = (() => {\n  const colorMap = {};\n  return tag => {\n    if (!colorMap[tag]) {\n      colorMap[tag] = colors[Object.keys(colorMap).length % colors.length];\n    }\n    return colorMap[tag];\n  };\n})();\n\nconst CartMovement = ({ data }) => {\n  const [latestData, setLatestData] = useState({ datasets: [] });\n\n  useEffect(() => {\n    if (data.length > 0) {\n      const latestMovements = data.reduce((acc, dataPoint) => {\n        acc[dataPoint.tag] = dataPoint;\n        return acc;\n      }, {});\n\n      const datasets = Object.keys(latestMovements).map(tag => ({\n        label: `Tag: ${tag}`,\n        data: [{ x: latestMovements[tag].x_axis, y: latestMovements[tag].y_axis }],\n        backgroundColor: getColor(tag),\n      }));\n\n      setLatestData({ datasets });\n    }\n  }, [data]);\n\n  return (\n    <div>\n      <h1>Cart Movement</h1>\n      <Scatter\n        data={latestData}\n        options={{\n          scales: {\n            x: {\n              type: 'linear',\n              position: 'bottom',\n              min: 0,\n              max: 200,\n              ticks: { display: false },\n              grid: { drawBorder: false, display: false },\n            },\n            y: {\n              type: 'linear',\n              position: 'left',\n              min: 0,\n              max: 250,\n              ticks: { display: true, beginAtZero: true },\n              grid: { drawBorder: true, display: false },\n            },\n          },\n          elements: { point: { radius: 5 } },\n          animation: false,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CartMovement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}