{"ast":null,"code":"var _jsxFileName = \"/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/components/CartMovement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, PointElement, LinearScale, Tooltip, Legend } from 'chart.js';\nimport Slider from '@mui/material/Slider';\nimport { connect, disconnect } from './hooks/useMqtt'; // Import the MQTT client\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(PointElement, LinearScale, Tooltip, Legend);\nconst CartMovement = () => {\n  _s();\n  const [allData, setAllData] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [latestData, setLatestData] = useState({\n    datasets: [{\n      data: []\n    }]\n  });\n  const [autoPull, setAutoPull] = useState(true);\n  const autoPullTimeout = useRef(null);\n  const bgImageRef = useRef(null);\n  const cartImageRef = useRef(null);\n  useEffect(() => {\n    // Preload images\n    const bgImg = new Image();\n    bgImg.src = '/bg-image.png';\n    bgImg.onload = () => {\n      bgImageRef.current = bgImg;\n    };\n    const cartImg = new Image();\n    cartImg.src = '/cart-image.png';\n    cartImg.onload = () => {\n      cartImageRef.current = cartImg;\n    };\n\n    // Set up MQTT client\n    const client = connect(data => {\n      setAllData(prevData => [...prevData, ...data]);\n      if (autoPull) {\n        setLatestData({\n          datasets: [{\n            label: 'Cart Position',\n            data: [{\n              x: data[data.length - 1].x_axis,\n              y: data[data.length - 1].y_axis\n            }],\n            backgroundColor: 'blue'\n          }]\n        });\n        setCurrentIndex(data.length - 1);\n      }\n    });\n    return () => {\n      disconnect();\n    };\n  }, [autoPull]);\n  useEffect(() => {\n    if (autoPull) {\n      const intervalId = setInterval(() => {\n        if (currentIndex < allData.length - 1) {\n          const nextIndex = currentIndex + 1;\n          setCurrentIndex(nextIndex);\n          const nextPoint = allData[nextIndex];\n          setLatestData({\n            datasets: [{\n              label: 'Cart Position',\n              data: [{\n                x: nextPoint.x_axis,\n                y: nextPoint.y_axis\n              }],\n              backgroundColor: 'blue'\n            }]\n          });\n        }\n      }, 1000); // Move to the next point every second\n\n      return () => clearInterval(intervalId); // Clean up the interval on component unmount\n    }\n  }, [autoPull, currentIndex, allData]);\n  const handleSliderChange = (event, newValue) => {\n    setCurrentIndex(newValue);\n    const selectedPoint = allData[newValue];\n    setLatestData({\n      datasets: [{\n        label: 'Cart Position',\n        data: [{\n          x: selectedPoint.x_axis,\n          y: selectedPoint.y_axis\n        }],\n        backgroundColor: 'blue'\n      }]\n    });\n    setAutoPull(false); // Disable auto-pull on manual change\n\n    // Clear any existing timeout\n    if (autoPullTimeout.current) {\n      clearTimeout(autoPullTimeout.current);\n    }\n\n    // Re-enable auto-pull after a delay\n    autoPullTimeout.current = setTimeout(() => {\n      setAutoPull(true);\n    }, 2000); // Adjust the delay as needed\n  };\n  const backgroundPlugin = {\n    id: 'background',\n    beforeDraw: chart => {\n      if (chart.chartArea && bgImageRef.current) {\n        const {\n          ctx,\n          chartArea\n        } = chart;\n        ctx.drawImage(bgImageRef.current, chartArea.left, chartArea.top, chartArea.width, chartArea.height);\n      }\n    }\n  };\n  const customPointPlugin = {\n    id: 'customPoint',\n    afterDraw: chart => {\n      const {\n        ctx\n      } = chart;\n      chart.data.datasets.forEach(dataset => {\n        dataset.data.forEach((value, index) => {\n          const meta = chart.getDatasetMeta(0);\n          const point = meta.data[index];\n          if (point && cartImageRef.current) {\n            ctx.drawImage(cartImageRef.current, point.x - 15, point.y - 15, 30, 30); // Adjust the size and position as needed\n          }\n        });\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart Movement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n      data: latestData,\n      options: {\n        scales: {\n          x: {\n            type: 'linear',\n            position: 'bottom',\n            min: 0,\n            max: 500\n          },\n          y: {\n            type: 'linear',\n            position: 'left',\n            min: 0,\n            max: 250\n          }\n        },\n        elements: {\n          point: {\n            radius: 0 // Hide the default points\n          }\n        }\n      },\n      plugins: [backgroundPlugin, customPointPlugin]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        value: currentIndex,\n        min: 0,\n        max: allData.length - 1,\n        onChange: handleSliderChange,\n        \"aria-labelledby\": \"cart-movement-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(CartMovement, \"agwM3/36VwhmIESNTXeRFtcctVs=\");\n_c = CartMovement;\nexport default CartMovement;\nvar _c;\n$RefreshReg$(_c, \"CartMovement\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Scatter","Chart","ChartJS","PointElement","LinearScale","Tooltip","Legend","Slider","connect","disconnect","jsxDEV","_jsxDEV","register","CartMovement","_s","allData","setAllData","currentIndex","setCurrentIndex","latestData","setLatestData","datasets","data","autoPull","setAutoPull","autoPullTimeout","bgImageRef","cartImageRef","bgImg","Image","src","onload","current","cartImg","client","prevData","label","x","length","x_axis","y","y_axis","backgroundColor","intervalId","setInterval","nextIndex","nextPoint","clearInterval","handleSliderChange","event","newValue","selectedPoint","clearTimeout","setTimeout","backgroundPlugin","id","beforeDraw","chart","chartArea","ctx","drawImage","left","top","width","height","customPointPlugin","afterDraw","forEach","dataset","value","index","meta","getDatasetMeta","point","children","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","type","position","min","max","elements","radius","plugins","onChange","_c","$RefreshReg$"],"sources":["/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/components/CartMovement.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, PointElement, LinearScale, Tooltip, Legend } from 'chart.js';\nimport Slider from '@mui/material/Slider';\nimport { connect, disconnect } from './hooks/useMqtt'; // Import the MQTT client\n\n// Register Chart.js components\nChartJS.register(PointElement, LinearScale, Tooltip, Legend);\n\nconst CartMovement = () => {\n  const [allData, setAllData] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [latestData, setLatestData] = useState({ datasets: [{ data: [] }] });\n  const [autoPull, setAutoPull] = useState(true);\n  const autoPullTimeout = useRef(null);\n  const bgImageRef = useRef(null);\n  const cartImageRef = useRef(null);\n\n  useEffect(() => {\n    // Preload images\n    const bgImg = new Image();\n    bgImg.src = '/bg-image.png';\n    bgImg.onload = () => {\n      bgImageRef.current = bgImg;\n    };\n\n    const cartImg = new Image();\n    cartImg.src = '/cart-image.png';\n    cartImg.onload = () => {\n      cartImageRef.current = cartImg;\n    };\n\n    // Set up MQTT client\n    const client = connect((data) => {\n      setAllData((prevData) => [...prevData, ...data]);\n\n      if (autoPull) {\n        setLatestData({\n          datasets: [{\n            label: 'Cart Position',\n            data: [{ x: data[data.length - 1].x_axis, y: data[data.length - 1].y_axis }],\n            backgroundColor: 'blue',\n          }]\n        });\n        setCurrentIndex(data.length - 1);\n      }\n    });\n\n    return () => {\n      disconnect();\n    };\n  }, [autoPull]);\n\n  useEffect(() => {\n    if (autoPull) {\n      const intervalId = setInterval(() => {\n        if (currentIndex < allData.length - 1) {\n          const nextIndex = currentIndex + 1;\n          setCurrentIndex(nextIndex);\n          const nextPoint = allData[nextIndex];\n          setLatestData({\n            datasets: [{\n              label: 'Cart Position',\n              data: [{ x: nextPoint.x_axis, y: nextPoint.y_axis }],\n              backgroundColor: 'blue',\n            }]\n          });\n        }\n      }, 1000); // Move to the next point every second\n\n      return () => clearInterval(intervalId); // Clean up the interval on component unmount\n    }\n  }, [autoPull, currentIndex, allData]);\n\n  const handleSliderChange = (event, newValue) => {\n    setCurrentIndex(newValue);\n    const selectedPoint = allData[newValue];\n    setLatestData({\n      datasets: [{\n        label: 'Cart Position',\n        data: [{ x: selectedPoint.x_axis, y: selectedPoint.y_axis }],\n        backgroundColor: 'blue',\n      }]\n    });\n    setAutoPull(false); // Disable auto-pull on manual change\n\n    // Clear any existing timeout\n    if (autoPullTimeout.current) {\n      clearTimeout(autoPullTimeout.current);\n    }\n\n    // Re-enable auto-pull after a delay\n    autoPullTimeout.current = setTimeout(() => {\n      setAutoPull(true);\n    }, 2000); // Adjust the delay as needed\n  };\n\n  const backgroundPlugin = {\n    id: 'background',\n    beforeDraw: (chart) => {\n      if (chart.chartArea && bgImageRef.current) {\n        const { ctx, chartArea } = chart;\n        ctx.drawImage(bgImageRef.current, chartArea.left, chartArea.top, chartArea.width, chartArea.height);\n      }\n    }\n  };\n\n  const customPointPlugin = {\n    id: 'customPoint',\n    afterDraw: (chart) => {\n      const { ctx } = chart;\n      chart.data.datasets.forEach((dataset) => {\n        dataset.data.forEach((value, index) => {\n          const meta = chart.getDatasetMeta(0);\n          const point = meta.data[index];\n          if (point && cartImageRef.current) {\n            ctx.drawImage(cartImageRef.current, point.x - 15, point.y - 15, 30, 30); // Adjust the size and position as needed\n          }\n        });\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Cart Movement</h1>\n      <Scatter\n        data={latestData}\n        options={{\n          scales: {\n            x: {\n              type: 'linear',\n              position: 'bottom',\n              min: 0,\n              max: 500,\n            },\n            y: {\n              type: 'linear',\n              position: 'left',\n              min: 0,\n              max: 250,\n            },\n          },\n          elements: {\n            point: {\n              radius: 0 // Hide the default points\n            }\n          }\n        }}\n        plugins={[backgroundPlugin, customPointPlugin]}\n      />\n      <div>\n        <Slider\n          value={currentIndex}\n          min={0}\n          max={allData.length - 1}\n          onChange={handleSliderChange}\n          aria-labelledby=\"cart-movement-slider\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CartMovement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}