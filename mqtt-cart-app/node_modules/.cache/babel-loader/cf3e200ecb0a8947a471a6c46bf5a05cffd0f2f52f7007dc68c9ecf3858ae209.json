{"ast":null,"code":"var _jsxFileName = \"/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport mqtt from 'mqtt';\nimport CartMovement from './components/CartMovement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MQTT_BROKER = 'ws://broker.hivemq.com:8000/mqtt';\nconst MQTT_TOPIC = 'cart/position';\nconst App = () => {\n  _s();\n  const [data, setData] = useState(() => {\n    // Initialize state from local storage if available\n    const savedData = localStorage.getItem('cartData');\n    return savedData ? JSON.parse(savedData) : [];\n  });\n  useEffect(() => {\n    const client = mqtt.connect(MQTT_BROKER);\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe(MQTT_TOPIC, err => {\n        if (err) {\n          console.error('Subscription error:', err);\n        }\n      });\n    });\n    client.on('message', (topic, message) => {\n      if (topic === MQTT_TOPIC) {\n        const newData = JSON.parse(message.toString());\n        setData(prevData => {\n          // Compare newData with the last item in the list\n          if (prevData.length > 0) {\n            const lastData = prevData[prevData.length - 1];\n            if (lastData.x_axis === newData.x_axis && lastData.y_axis === newData.y_axis) {\n              return prevData; // Do not update state if data is the same\n            }\n          }\n          const updatedData = [...prevData, newData];\n\n          // Save updated data to local storage\n          localStorage.setItem('cartData', JSON.stringify(updatedData));\n          return updatedData; // Add new data to the list\n        });\n      }\n    });\n    return () => {\n      if (client) {\n        client.end();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartMovement, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qN7f4bqa3p0GRzP2nHW0Zmzng6Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mqtt","CartMovement","jsxDEV","_jsxDEV","MQTT_BROKER","MQTT_TOPIC","App","_s","data","setData","savedData","localStorage","getItem","JSON","parse","client","connect","on","console","log","subscribe","err","error","topic","message","newData","toString","prevData","length","lastData","x_axis","y_axis","updatedData","setItem","stringify","end","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daviswu/Desktop/cart-tracker/React-MQTT/mqtt-cart-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport mqtt from 'mqtt';\nimport CartMovement from './components/CartMovement';\n\nconst MQTT_BROKER = 'ws://broker.hivemq.com:8000/mqtt';\nconst MQTT_TOPIC = 'cart/position';\n\nconst App = () => {\n  const [data, setData] = useState(() => {\n    // Initialize state from local storage if available\n    const savedData = localStorage.getItem('cartData');\n    return savedData ? JSON.parse(savedData) : [];\n  });\n\n  useEffect(() => {\n    const client = mqtt.connect(MQTT_BROKER);\n\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe(MQTT_TOPIC, (err) => {\n        if (err) {\n          console.error('Subscription error:', err);\n        }\n      });\n    });\n\n    client.on('message', (topic, message) => {\n      if (topic === MQTT_TOPIC) {\n        const newData = JSON.parse(message.toString());\n\n        setData((prevData) => {\n          // Compare newData with the last item in the list\n          if (prevData.length > 0) {\n            const lastData = prevData[prevData.length - 1];\n            if (lastData.x_axis === newData.x_axis && lastData.y_axis === newData.y_axis) {\n              return prevData; // Do not update state if data is the same\n            }\n          }\n\n          const updatedData = [...prevData, newData];\n          \n          // Save updated data to local storage\n          localStorage.setItem('cartData', JSON.stringify(updatedData));\n\n          return updatedData; // Add new data to the list\n        });\n      }\n    });\n\n    return () => {\n      if (client) {\n        client.end();\n      }\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Data Points</h1>\n      <CartMovement data={data} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAG,kCAAkC;AACtD,MAAMC,UAAU,GAAG,eAAe;AAElC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACrC;IACA,MAAMY,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAClD,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,EAAE;EAC/C,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACd,MAAMgB,MAAM,GAAGf,IAAI,CAACgB,OAAO,CAACZ,WAAW,CAAC;IAExCW,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCJ,MAAM,CAACK,SAAS,CAACf,UAAU,EAAGgB,GAAG,IAAK;QACpC,IAAIA,GAAG,EAAE;UACPH,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;QAC3C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFN,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,CAACM,KAAK,EAAEC,OAAO,KAAK;MACvC,IAAID,KAAK,KAAKlB,UAAU,EAAE;QACxB,MAAMoB,OAAO,GAAGZ,IAAI,CAACC,KAAK,CAACU,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAC;QAE9CjB,OAAO,CAAEkB,QAAQ,IAAK;UACpB;UACA,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;YACvB,MAAMC,QAAQ,GAAGF,QAAQ,CAACA,QAAQ,CAACC,MAAM,GAAG,CAAC,CAAC;YAC9C,IAAIC,QAAQ,CAACC,MAAM,KAAKL,OAAO,CAACK,MAAM,IAAID,QAAQ,CAACE,MAAM,KAAKN,OAAO,CAACM,MAAM,EAAE;cAC5E,OAAOJ,QAAQ,CAAC,CAAC;YACnB;UACF;UAEA,MAAMK,WAAW,GAAG,CAAC,GAAGL,QAAQ,EAAEF,OAAO,CAAC;;UAE1C;UACAd,YAAY,CAACsB,OAAO,CAAC,UAAU,EAAEpB,IAAI,CAACqB,SAAS,CAACF,WAAW,CAAC,CAAC;UAE7D,OAAOA,WAAW,CAAC,CAAC;QACtB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAIjB,MAAM,EAAE;QACVA,MAAM,CAACoB,GAAG,CAAC,CAAC;MACd;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhC,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBrC,OAAA,CAACF,YAAY;MAACO,IAAI,EAAEA;IAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACjC,EAAA,CAvDID,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAyDT,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}